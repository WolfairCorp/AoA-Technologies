PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


// --- general parameters ---
name = AoA.SkuCockpit
module = Part
author = F. Martinez

// --- asset parameters ---

MODEL
	{
	model = AoATech/Parts/Command/SuperKU34/model
	}



// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
scale = 0.1
rescaleFactor = 1
node_stack_bottom = 0.0, -27.139, 0.0, 0.0, -1.0, 0.0, 1
CoMOffset = 0.0, -1.6, 0.0



// --- editor parameters ---
TechRequired = supersonicFlight
entryCost = 4200
cost = 2200
category = Pods
subcategory = 0
title = KU-34 Cockpit
manufacturer = AoA Technologies
description = The Super-34 cockpit provides state of the art avionics and a high visibility canopy. Maximum seating 2 Kerbals.
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 1.25
dragModelType = default
maximum_drag = 0.1
minimum_drag = 0.1
angularDrag = 2
crashTolerance = 45
maxTemp = 3400
vesselType = Plane
bulkheadProfiles = mk2

// --- internal setup ---
CrewCapacity = 1

INTERNAL
{
  name = AoA.SkuInternal
}

MODULE
{
	name = ModuleCommand
	minimumCrew = 1
}

RESOURCE
{
	name = ElectricCharge
	amount = 50
	maxAmount = 50
}

RESOURCE
 {
       name = IntakeAir
       amount = 0.3
       maxAmount = 0.3
  }

MODULE
{
	name = ModuleReactionWheel

	PitchTorque = 10
	YawTorque = 10
	RollTorque = 10

	RESOURCE
	{
		name = ElectricCharge
		rate = 0.375
	}
}

MODULE
{
	name = ModuleResourceIntake
	resourceName = IntakeAir
	checkForOxygen = true
	area = 0.01
	intakeSpeed = 10
	intakeTransformName = intake
}

MODULE
{
    name = ModuleAnimateGeneric
    animationName = CanopyFormationLight
	actionGUIName = Toggle Lights
	startEventGUIName = Lights On
	endEventGUIName = Lights Off
}

MODULE
{
	name = ModuleScienceExperiment

	experimentID = crewReport

	experimentActionName = Crew Report
	resetActionName = Discard Crew Report
	reviewActionName = Review Report

	useStaging = False
	useActionGroups = True
	hideUIwhenUnavailable = True
	rerunnable = True

	xmitDataScalar = 1.0
}
MODULE
{
	name = ModuleDataTransmitter
	antennaType = INTERNAL
	packetInterval = 1.0
	packetSize = 2
	packetResourceCost = 12.0
	requiredResource = ElectricCharge
	antennaPower = 5000
	optimumRange = 2500
	packetFloor = .1
	packetCeiling = 5
}
MODULE
{
	name = ModuleSAS
}
MODULE
{
	name = MissileFire
}

MODULE
{
	name = RadarWarningReceiver
}

MODULE
{
	name = ModuleWingCommander
}

MODULE
{
	name = ModuleRadar

	// -- Section: General Configuration --
	radarName = Super KU-34 Radome		// if left empty part.title is used, but advised to set this to a nice printable text
	rwrThreatType = 1				// IMPORTANT, please set correctly:
						  // 0 = SAM site radar
						  // 1 = Fighter radar (airborne)
						  // 2 = AWACS radar (airborne)
						  // 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOU'RE DOING!
						  // 5 = Detection radar (ground/ship based)
						  // 6 = SONAR (ship/submarine based)
	rotationTransformName = scanRotation
	//turretID = 0					// if needed
	resourceDrain = 0.825			// change to higher values for more capable radars, e.g AESA

	// -- Section: Capabilities --
	omnidirectional = false			// false: boresight scan radar
	directionalFieldOfView = 120	// for omni and boresight
	//boresightFOV = 10				// for boresight only
	//scanRotationSpeed = 240		// degress per second
	//lockRotationSpeed = 120		// only relevant if canLock
	lockRotationAngle = 4
	showDirectionWhileScan = true	// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
	multiLockFOV = 40				// only relevant if canLock
	//lockAttemptFOV = 2			// only relevant if canLock
	maxLocks = 3					//how many targets can be locked/tracked simultaneously. only relevant if canLock

	canScan = true					// scanning/detecting targets (volume search)
	canLock = true					// locking/tracking targets (fire control)
	canTrackWhileScan = true		// continue scanning while tracking a locked target
	canRecieveRadarData = false		// can work as passive data receiver (NOTE THE SPELLING! [SIC])

	minSignalThreshold = 80			// DEPRECATED, NO LONGER USED! use detection float curve!
	minLockedSignalThreshold = 100	// DEPRECATED, NO LONGER USED! use locktrack float curve!

	radarGroundClutterFactor = 0.1	// how much is the radar efficiency reduced to by ground clutter/look-down?
									// 0.0 = reduced to 0% (=IMPOSSIBLE to detect ground targets)
									// 1.0 = fully efficient (no difference between air & ground targets)
									// default if unset: 0.25
									// Ground targets, especially ships, already have a massively larger RCS than fighters, hence
									// any ground clutter factor >0.25 is to be considered very good, making an efficient surface/horizon search radar.
									// values >1.0 are possible, meaning the radar is MORE efficient during look down than vs air targets.

	radarDetectionCurve
	{
			// floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
			// this defines both min/max range of the radar, and sensitivity/efficiency
			// it is recommended to define an "assured detection range", at which all craft are detected regardless
			//     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
			//        key = distance	rcs
	
			  key = 0.0	0
			  key = 5	0	//between 0 and 5 km the min cross section is 0, thus assured detection of everything
			  key = 10	5   //
			  key = 20 15	//
			  key = 35 25	//maxrange of 35km
	}

	radarLockTrackCurve
	{
			  // same as detectionCurve, just for locking/tracking purpose
			  // ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
			  //   ECM-jammers & chaff completely ineffective!!
			  //      key = distance	rcs
			  
			  key = 0.0	0
			  key = 5	5	//
			  key = 10	7   //
			  key = 20 20	//
			  key = 35 35	//maxrange of 35km
	}
}
MODULE
{
	name = ModuleLiftingSurface

	deflectionLiftCoeff = 0.6
	dragAtMaxAoA = 0.1
	dragAtMinAoA = 0.03
}
}
