PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


// --- general parameters ---
name = AoA.Rafale
module = Part
author = F. Martinez

// --- asset parameters ---

MODEL
	{
	model = AoATech/Parts/Command/Rafale/model
	}



// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
scale = 0.1
rescaleFactor = 1
node_stack_bottom = 0.0, -20.915, 1.28899, 0.0, -1.0, 0.0, 1



// --- editor parameters ---
TechRequired = supersonicFlight
entryCost = 4200
cost = 2200
category = Pods
subcategory = 0
title = Rafale
manufacturer = AoA Technologies
description = We promise we didn't steal this from another company...
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 1.5
dragModelType = default
maximum_drag = 0.1
minimum_drag = 0.1
angularDrag = 2
crashTolerance = 45
maxTemp = 3400

stagingIcon = COMMAND_POD
vesselType = Ship
bulkheadProfiles = mk2

// --- internal setup ---
CrewCapacity = 1

INTERNAL
{
  name = AoA.HornetInt
}

MODULE
{
	name = ModuleCommand
	minimumCrew = 1
}

RESOURCE
{
	name = ElectricCharge
	amount = 80
	maxAmount = 80
}

RESOURCE
 {
       name = IntakeAir
       amount = 0.3
       maxAmount = 0.3
  }

MODULE
{
	name = ModuleReactionWheel
	
	PitchTorque = 10
	YawTorque = 10
	RollTorque = 10
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.375
	}
}

MODULE
{
	name = ModuleResourceIntake
	resourceName = IntakeAir
	checkForOxygen = true
	area = 0.02
	intakeSpeed = 10
	intakeTransformName = intake
}

RESOURCE
{
	name = LiquidFuel
	amount = 0
	maxAmount = 80
}

MODULE
{
    name = ModuleAnimateGeneric
    animationName = DasLightAnim
	actionGUIName = Toggle Lights
	startEventGUIName = Lights On
	endEventGUIName = Lights Off
}


// -- BDARMORY Stuff --

MODULE
{
  name = ModuleRadar
  omnidirectional = false
  scanRotationSpeed = 120
  directionalFieldOfView = 120
  lockRotationAngle = 4
  canRecieveRadarData = true
  minSignalThreshold = 150
  minLockedSignalThreshold = 220
  rwrThreatType = 1
}

MODULE
{
  name = BDACategoryModule
}

}
